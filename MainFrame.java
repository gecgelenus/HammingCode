/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hammingcode;

import java.awt.Color;
import java.util.Vector;
import javax.swing.JLabel;

/**
 *
 * @author talha
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }
    
    private Vector<JLabel> dataArray;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        dataFieldWrite = new javax.swing.JTextField();
        dataSizeWriteCombo = new javax.swing.JComboBox<>();
        dataSizeLabel = new javax.swing.JLabel();
        dataSizeLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        dataSizeLabel2 = new javax.swing.JLabel();
        dataAddressWrite = new javax.swing.JTextField();
        dataWriteBUtton = new javax.swing.JButton();
        dataSizeLabel3 = new javax.swing.JLabel();
        dataSizeReadCombo = new javax.swing.JComboBox<>();
        dataSizeLabel4 = new javax.swing.JLabel();
        dataFieldRead = new javax.swing.JTextField();
        dataSizeLabel5 = new javax.swing.JLabel();
        dataAddressRead = new javax.swing.JTextField();
        dataReadButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        byte20 = new javax.swing.JLabel();
        byte19 = new javax.swing.JLabel();
        byte18 = new javax.swing.JLabel();
        byte17 = new javax.swing.JLabel();
        byte16 = new javax.swing.JLabel();
        byte15 = new javax.swing.JLabel();
        byte14 = new javax.swing.JLabel();
        byte13 = new javax.swing.JLabel();
        byte12 = new javax.swing.JLabel();
        byte11 = new javax.swing.JLabel();
        byte10 = new javax.swing.JLabel();
        byte9 = new javax.swing.JLabel();
        byte8 = new javax.swing.JLabel();
        byte7 = new javax.swing.JLabel();
        byte6 = new javax.swing.JLabel();
        byte5 = new javax.swing.JLabel();
        byte4 = new javax.swing.JLabel();
        byte3 = new javax.swing.JLabel();
        byte2 = new javax.swing.JLabel();
        byte1 = new javax.swing.JLabel();
        byte0 = new javax.swing.JLabel();
        byte21 = new javax.swing.JLabel();
        byte22 = new javax.swing.JLabel();
        byte23 = new javax.swing.JLabel();
        byte24 = new javax.swing.JLabel();
        byte25 = new javax.swing.JLabel();
        byte26 = new javax.swing.JLabel();
        byte27 = new javax.swing.JLabel();
        byte28 = new javax.swing.JLabel();
        byte29 = new javax.swing.JLabel();
        byte30 = new javax.swing.JLabel();
        byte31 = new javax.swing.JLabel();
        byte32 = new javax.swing.JLabel();
        byte33 = new javax.swing.JLabel();
        byte34 = new javax.swing.JLabel();
        byte35 = new javax.swing.JLabel();
        byte36 = new javax.swing.JLabel();
        byte37 = new javax.swing.JLabel();
        byte38 = new javax.swing.JLabel();
        byte39 = new javax.swing.JLabel();
        byte40 = new javax.swing.JLabel();
        byte41 = new javax.swing.JLabel();
        byte42 = new javax.swing.JLabel();
        byte43 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        infoLabel1 = new javax.swing.JLabel();
        infoLabel2 = new javax.swing.JLabel();
        infoLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        readDataLabel = new javax.swing.JLabel();
        errorLabel = new javax.swing.JLabel();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dataFieldWrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataFieldWriteActionPerformed(evt);
            }
        });

        dataSizeWriteCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4 Bit", "8 Bit", "16 Bit" }));

        dataSizeLabel.setText("Data size");

        dataSizeLabel1.setText("Data value");

        dataTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"0x000", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x015", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x02A", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x03F", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x054", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x069", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x07E", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x093", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x0A8", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x0BD", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x0D2", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x0E7", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x0FC", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x111", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x126", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"0x13B", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Address", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21"
            }
        ));
        dataTable.setToolTipText("");
        dataTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dataTable.setShowGrid(true);
        dataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dataTable);
        if (dataTable.getColumnModel().getColumnCount() > 0) {
            dataTable.getColumnModel().getColumn(0).setPreferredWidth(100);
        }

        dataSizeLabel2.setText("Address");

        dataAddressWrite.setText("0x000");
        dataAddressWrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataAddressWriteActionPerformed(evt);
            }
        });

        dataWriteBUtton.setText("Write");
        dataWriteBUtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataWriteBUttonActionPerformed(evt);
            }
        });

        dataSizeLabel3.setText("Data size");

        dataSizeReadCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4 Bit", "8 Bit", "16 Bit" }));

        dataSizeLabel4.setText("Data value");

        dataFieldRead.setEditable(false);
        dataFieldRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataFieldReadActionPerformed(evt);
            }
        });

        dataSizeLabel5.setText("Address");

        dataAddressRead.setText("0x000");
        dataAddressRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataAddressReadActionPerformed(evt);
            }
        });

        dataReadButton.setText("Read");
        dataReadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataReadButtonActionPerformed(evt);
            }
        });

        byte20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte20.setText("20");
        byte20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte19.setText("19");
        byte19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte18.setText("18");
        byte18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte17.setText("17");
        byte17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte16.setText("16");
        byte16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte15.setText("15");
        byte15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte14.setText("14");
        byte14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte13.setText("13");
        byte13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte12.setText("12");
        byte12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte11.setText("11");
        byte11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte10.setText("10");
        byte10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte9.setText("9");
        byte9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte8.setText("8");
        byte8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte7.setText("7");
        byte7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte6.setText("6");
        byte6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte5.setText("5");
        byte5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte4.setText("4");
        byte4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte3.setText("3");
        byte3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte2.setText("2");
        byte2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte1.setText("1");
        byte1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte0.setText("0");
        byte0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte21.setText("21");
        byte21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        byte21.setFocusable(false);

        byte22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte22.setText("0");
        byte22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte23.setText("0");
        byte23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte24.setText("0");
        byte24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte25.setText("0");
        byte25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte26.setText("0");
        byte26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte27.setText("0");
        byte27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte28.setText("0");
        byte28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte29.setText("0");
        byte29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte30.setText("0");
        byte30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte31.setText("0");
        byte31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte32.setText("0");
        byte32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte33.setText("0");
        byte33.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte34.setText("0");
        byte34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte35.setText("0");
        byte35.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte36.setText("0");
        byte36.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte37.setText("0");
        byte37.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte38.setText("0");
        byte38.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte39.setText("0");
        byte39.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte40.setText("0");
        byte40.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte41.setText("0");
        byte41.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte42.setText("0");
        byte42.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        byte43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        byte43.setText("0");
        byte43.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(byte21, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte20, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte19, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte18, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(byte22, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte23, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte24, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte25, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(byte17, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte16, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte0, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(byte26, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte27, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte28, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte29, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte30, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte31, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte32, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte33, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte34, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte35, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte36, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte37, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte38, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte39, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte40, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte41, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte42, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(byte43, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(byte20, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte19, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte18, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte17, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte16, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte14, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte21, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(byte22, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte23, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte24, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte25, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte26, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte27, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte28, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte29, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte30, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte31, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte32, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte33, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte34, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte35, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte36, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte37, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte38, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte39, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte40, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte41, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte42, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byte43, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jLabel1.setText("Index");

        infoLabel1.setText("Hamming bits are red");

        infoLabel2.setText("Data bits are blue");

        infoLabel3.setText("Corrected bits are green");

        jLabel2.setText("Data");

        jLabel3.setText("Selected address: ");

        readDataLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        errorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dataSizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataSizeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataSizeLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dataSizeWriteCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataFieldWrite, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataAddressWrite, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(dataWriteBUtton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dataSizeLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataSizeLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataSizeLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dataFieldRead, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataSizeReadCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataAddressRead, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dataReadButton)))
                .addGap(176, 176, 176))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(infoLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(infoLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(infoLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(readDataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(255, 255, 255)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dataSizeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dataSizeWriteCombo)
                        .addComponent(dataSizeLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dataSizeReadCombo)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataFieldWrite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataSizeLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dataSizeLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dataFieldRead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataSizeLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataAddressWrite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataSizeLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataAddressRead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataReadButton)
                    .addComponent(dataWriteBUtton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(infoLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(infoLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(infoLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(readDataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );

        pack();
    }// </editor-fold>                        

    private void dataFieldWriteActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void dataAddressWriteActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void dataFieldReadActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void dataAddressReadActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void dataWriteBUttonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        errorLabel.setText("");
        int sizeIndex = dataSizeWriteCombo.getSelectedIndex();
        String data = dataFieldWrite.getText();
        int address = 0;
        try {
                    if(!dataAddressWrite.getText().substring(0, 2).equals("0x")){
                        System.out.println("Please enter valid address!");
                        return;
                    }
                    address = Integer.parseInt(dataAddressWrite.getText().substring(2), 16);

        } catch (Exception e) {
            System.out.println("Please enter valid address!");
            return;
        }
        
        
        String code = "null";
        if(sizeIndex == 0){
            if(data.length() != 4){
                System.out.println("Error! Please enter 4 byte data");
                return;
            }
            code = generateHammingCode4(data);
            for(int i = 0; i < 4; i++){
                
            }
        }else if(sizeIndex == 1){
            if(data.length() != 8){
                System.out.println("Error! Please enter 8 byte data");
                return;
            }
            code = generateHammingCode8(data);
        }else if(sizeIndex == 2){
            if(data.length() != 16){
                System.out.println("Error! Please enter 16 byte data");
                return;
            }
            code = generateHammingCode16(data);
        }
        
        int row = address/21;
        int column = address%21;
        String reversed = new StringBuilder(code).reverse().toString();
        
        
        for(int i = 0; i < reversed.length(); i++){
            dataTable.setValueAt(reversed.charAt(i), row, column+1);
            address++;
            row = address/21;
            column = address%21;
        }
        
        StringBuilder temp = new StringBuilder(code);
        
        updateArray(temp.reverse().toString(), sizeIndex);
        
    }                                               

    private void dataTableMouseClicked(java.awt.event.MouseEvent evt) {                                       
        int column = dataTable.getSelectedColumn();
        int row = dataTable.getSelectedRow();
        System.out.print("Column" + column);
        System.out.println(" Row" + row);
        int address = row*21 + (column-1);
        jLabel3.setText("Selected address: 0x" + String.format("%03X", address));
    }                                      

    private void dataReadButtonActionPerformed(java.awt.event.ActionEvent evt) {                                               
              
        int sizeIndex = dataSizeReadCombo.getSelectedIndex();
        String data = dataAddressRead.getText();
        int address = 0;
        try {
                    if(!data.substring(0, 2).equals("0x")){
                        System.out.println("Please enter valid address!");
                        return;
                    }
                    address = Integer.parseInt(data.substring(2), 16);

        } catch (Exception e) {
            System.out.println("Please enter valid address!");
            return;
        }
        
        readData(address, sizeIndex);
    }                                              

    private void readData(int address, int base){
        
        int r1 = 0;
        int r2 = 0;
        int r4 = 0;
        int r8 = 0;
        int r16 = 0;
        StringBuilder dataString = new StringBuilder();
        StringBuilder code = new StringBuilder();
        int[] array = null;

        
        if(base == 0){
            array = new int[7];
            

            for(int i = 0; i < 7;i++){
                array[6-i] = Integer.parseInt(dataTable.getValueAt(address/21, address%21+1).toString());
                address++;
            }
            dataString.append(array[2]);
            dataString.append(array[4]);
            dataString.append(array[5]);
            dataString.append(array[6]);

            

            r1 = array[0] ^ array[2] ^ array[4] ^ array[6];
            r2 = array[1] ^ array[2] ^ array[5] ^ array[6];
            r4 = array[3] ^ array[4] ^ array[5] ^ array[6];

            System.out.println(r16 + " " + r8 + " " + r4 + " " + r2 + " "+ r1);
            
            
            for(int bit: array){
                code.append(bit);
            }
            
            updateArray(code.reverse().toString(), base);
            
        }
        
        if(base == 1){
            array = new int[12];

            for(int i = 0; i < 12;i++){
                array[11-i] = Integer.parseInt(dataTable.getValueAt(address/21, address%21+1).toString());
                address++;
                System.out.println(array[11-i]);
            }
            
            r1 = array[0] ^ array[2] ^ array[4] ^ array[6] ^ array[8] ^ array[10];
            r2 = array[1] ^ array[2] ^ array[5] ^ array[6] ^ array[9] ^ array[10];
            r4 = array[3] ^ array[4] ^ array[5] ^ array[6] ^ array[11];
            r8 = array[7] ^ array[8] ^ array[9] ^ array[10] ^ array[11];

            System.out.println(r16 + " " + r8 + " " + r4 + " " + r2 + " " + r1);
            
            for(int bit: array){
                code.append(bit);
            }
            dataString.append(array[2]);
            dataString.append(array[4]);
            dataString.append(array[5]);
            dataString.append(array[6]);
            dataString.append(array[8]);
            dataString.append(array[9]);
            dataString.append(array[10]);
            dataString.append(array[11]);
            
            
            updateArray(code.reverse().toString(), base);
        }
        
        if(base == 2){
            array = new int[21];

            for(int i = 0; i < 21;i++){
                array[20-i] = Integer.parseInt(dataTable.getValueAt(address/21, address%21+1).toString());
                address++;
                System.out.println(array[20-i]);
            }
            
            r1 = array[0] ^ array[2] ^ array[4] ^ array[6] ^ array[8] ^ array[10] ^ array[12] ^ array[14] ^ array[16] ^ array[18] ^ array[20];
            r2 = array[1] ^ array[2] ^ array[5] ^ array[6] ^ array[9] ^ array[10] ^ array[13] ^ array[14] ^ array[17] ^ array[18];
            r4 = array[3] ^ array[4] ^ array[5] ^ array[6] ^ array[11] ^ array[12] ^ array[13] ^ array[14] ^ array[19] ^ array[20];
            r8 = array[7] ^ array[8] ^ array[9] ^ array[10] ^ array[11] ^ array[12] ^  array[13] ^ array[14];
            r16 = array[15] ^ array[16] ^ array[17] ^ array[18] ^ array[19] ^ array[20];

            System.out.println(r16 + " " + r8 + " " + r4 + " " + r2 + " "+ r1);
            
            for(int bit: array){
                code.append(bit);
            }
            dataString.append(array[2]);
            dataString.append(array[4]);
            dataString.append(array[5]);
            dataString.append(array[6]);
            dataString.append(array[8]);
            dataString.append(array[9]);
            dataString.append(array[10]);
            dataString.append(array[11]);
            dataString.append(array[12]);
            dataString.append(array[13]);
            dataString.append(array[14]);
            dataString.append(array[16]);
            dataString.append(array[17]);
            dataString.append(array[18]);
            dataString.append(array[19]);
            dataString.append(array[20]);
            
            
            updateArray(code.reverse().toString(), base);
            
        }
        
        StringBuilder errorCodeBuilder = new StringBuilder();
        errorCodeBuilder.append(r16);
        errorCodeBuilder.append(" ");
        errorCodeBuilder.append(r8);
        errorCodeBuilder.append(" ");
        errorCodeBuilder.append(r4);
        errorCodeBuilder.append(" ");
        errorCodeBuilder.append(r2);
        errorCodeBuilder.append(" ");
        errorCodeBuilder.append(r1);
        
        String errorCode = errorCodeBuilder.toString();
        
        int errorCodeDecimal = 0;
        errorCodeDecimal += r1 * 1;
        errorCodeDecimal += r2 * 2;
        errorCodeDecimal += r4 * 4;
        errorCodeDecimal += r8 * 8;
        errorCodeDecimal += r16 * 16;

        if(r1 == 0 && r2 == 0 && r4 == 0 && r8 == 0 && r16 == 0){
            errorLabel.setText("No error found. Error code >> " + errorCode);
            dataFieldRead.setText(dataString.toString());

        }else{
            String errorBit = dataArray.elementAt(errorCodeDecimal-1).getText();
            System.out.println(array.length);
            if(errorBit.equals("0")){
                dataArray.elementAt(errorCodeDecimal-1).setText("1");
                array[errorCodeDecimal-1] = 1;
                
            }else{
                dataArray.elementAt(errorCodeDecimal-1).setText("0");
                array[errorCodeDecimal-1] = 0;
            }
            dataString = new StringBuilder();
            if(base == 0){
                dataString.append(array[2]);
                dataString.append(array[4]);
                dataString.append(array[5]);
                dataString.append(array[6]);
            }else if(base == 1){
                dataString.append(array[2]);
                dataString.append(array[4]);
                dataString.append(array[5]);
                dataString.append(array[6]);
                dataString.append(array[8]);
                dataString.append(array[9]);
                dataString.append(array[10]);
                dataString.append(array[11]);
            }else{
                dataString.append(array[2]);
                dataString.append(array[4]);
                dataString.append(array[5]);
                dataString.append(array[6]);
                dataString.append(array[8]);
                dataString.append(array[9]);
                dataString.append(array[10]);
                dataString.append(array[11]);
                dataString.append(array[12]);
                dataString.append(array[13]);
                dataString.append(array[14]);
                dataString.append(array[16]);
                dataString.append(array[17]);
                dataString.append(array[18]);
                dataString.append(array[19]);
                dataString.append(array[20]);
            }
           
            
            dataArray.elementAt(errorCodeDecimal-1).setForeground(Color.green);
            errorLabel.setText("Error found and corrected at bit " + errorCodeDecimal + " Error code >> " + errorCode);
            dataFieldRead.setText(dataString.toString());
        }

    }
    
    
    
    public void resetDataTable(){
        String[][] elements = new String[22][16];
        for(int i = 0; i < 22;i++){
            for(int j = 0; j < 16; j++){
                elements[i][j] = "0";
                dataTable.setValueAt("0", j, i);
            }
        }
        
        
        
    }
    
    public void initArray(){
        dataArray = new Vector<JLabel>();
        dataArray.add(byte43);
        dataArray.add(byte42);
        dataArray.add(byte41);
        dataArray.add(byte40);
        dataArray.add(byte39);
        dataArray.add(byte38);
        dataArray.add(byte37);
        dataArray.add(byte36);
        dataArray.add(byte35);
        dataArray.add(byte34);
        dataArray.add(byte33);
        dataArray.add(byte32);
        dataArray.add(byte31);
        dataArray.add(byte30);
        dataArray.add(byte29);
        dataArray.add(byte28);
        dataArray.add(byte27);
        dataArray.add(byte26);
        dataArray.add(byte25);
        dataArray.add(byte24);
        dataArray.add(byte23);
        dataArray.add(byte22);
    }
    
    public void updateArray(String code, int base){
        for(JLabel label: dataArray){
            label.setText("0");
            label.setForeground(Color.black);
        }
        int len = code.length();
        
        for(int i = 0; i < len; i++){
            dataArray.elementAt(len-i-1).setText(String.valueOf(code.charAt(i)));
            dataArray.elementAt(len-i-1).setForeground(Color.blue);
        }
        System.out.println("base" + base);
        if(base == 0){
            dataArray.elementAt(0).setForeground(Color.red);
            dataArray.elementAt(1).setForeground(Color.red);
            dataArray.elementAt(3).setForeground(Color.red);
        }
        if(base == 1){
            dataArray.elementAt(0).setForeground(Color.red);
            dataArray.elementAt(1).setForeground(Color.red);
            dataArray.elementAt(3).setForeground(Color.red);
            dataArray.elementAt(7).setForeground(Color.red);

        }
        
        if(base == 2){
            dataArray.elementAt(0).setForeground(Color.red);
            dataArray.elementAt(1).setForeground(Color.red);
            dataArray.elementAt(3).setForeground(Color.red);
            dataArray.elementAt(7).setForeground(Color.red);
            dataArray.elementAt(15).setForeground(Color.red);
        }
        
    }
    
    public static String generateHammingCode4(String data) {
        int[] hammingArray = new int[7]; 

        int[] dataBits = new int[4];
        for (int i = 0; i < data.length(); i++) {
            dataBits[i] = Integer.parseInt(String.valueOf(data.charAt(i)));
        }
       
        hammingArray[2] = dataBits[0];
        hammingArray[4] = dataBits[1];
        hammingArray[5] = dataBits[2];
        hammingArray[6] = dataBits[3];
        
        hammingArray[0] = hammingArray[2] ^ hammingArray[4] ^ hammingArray[6]; //R1
        hammingArray[1] = hammingArray[2] ^ hammingArray[5] ^ hammingArray[6]; //R2
        hammingArray[3] = hammingArray[4] ^ hammingArray[5] ^ hammingArray[6]; //R4


        StringBuilder hammingCodeBuilder = new StringBuilder();
        for (int bit : hammingArray) {
            hammingCodeBuilder.append(bit);
        }

        return hammingCodeBuilder.toString();
    }
    
    public static String generateHammingCode8(String data) {
        int[] hammingArray = new int[12]; 

        int[] dataBits = new int[8];
        for (int i = 0; i < data.length(); i++) {
            dataBits[i] = Integer.parseInt(String.valueOf(data.charAt(i)));
            System.out.println(dataBits[i]);
        }

        hammingArray[0] = dataBits[0] ^ dataBits[1] ^ dataBits[3] ^ dataBits[4] ^ dataBits[6]; //R1
        hammingArray[1] = dataBits[0] ^ dataBits[2] ^ dataBits[3] ^ dataBits[5] ^ dataBits[6]; //R2
        hammingArray[3] = dataBits[1] ^ dataBits[2] ^ dataBits[3] ^ dataBits[7]; //R4
        hammingArray[7] = dataBits[4] ^ dataBits[5] ^ dataBits[6] ^ dataBits[7]; //R8

        hammingArray[2] = dataBits[0];
        hammingArray[4] = dataBits[1];
        hammingArray[5] = dataBits[2];
        hammingArray[6] = dataBits[3];
        hammingArray[8] = dataBits[4];
        hammingArray[9] = dataBits[5];
        hammingArray[10] = dataBits[6];
        hammingArray[11] = dataBits[7];

        StringBuilder hammingCodeBuilder = new StringBuilder();
        for (int bit : hammingArray) {
            hammingCodeBuilder.append(bit);
        }

        return hammingCodeBuilder.toString();
    }
    
    public static String generateHammingCode16(String data) {
        int[] hammingArray = new int[21]; 

        int[] dataBits = new int[16];
        for (int i = 0; i < data.length(); i++) {
            dataBits[i] = Integer.parseInt(String.valueOf(data.charAt(i)));
        }

        hammingArray[0] = dataBits[0] ^ dataBits[1] ^ dataBits[3] ^ dataBits[4] ^ dataBits[6] ^ dataBits[8] ^ dataBits[10] ^ dataBits[11] ^ dataBits[13] ^ dataBits[15]; // R1
        hammingArray[1] = dataBits[0] ^ dataBits[2] ^ dataBits[3] ^ dataBits[5] ^ dataBits[6] ^ dataBits[9] ^ dataBits[10] ^ dataBits[12] ^ dataBits[13]; // R2
        hammingArray[3] = dataBits[1] ^ dataBits[2] ^ dataBits[3] ^ dataBits[7] ^ dataBits[8] ^ dataBits[9] ^ dataBits[10] ^ dataBits[14] ^ dataBits[15]; // R4
        hammingArray[7] = dataBits[4] ^ dataBits[5] ^ dataBits[6] ^ dataBits[7] ^ dataBits[8] ^ dataBits[9] ^ dataBits[10] ; // R8
        hammingArray[15] = dataBits[11] ^ dataBits[12] ^ dataBits[13] ^ dataBits[14] ^ dataBits[15]; // R16

        hammingArray[2] = dataBits[0];
        hammingArray[4] = dataBits[1];
        hammingArray[5] = dataBits[2];
        hammingArray[6] = dataBits[3];
        hammingArray[8] = dataBits[4];
        hammingArray[9] = dataBits[5];
        hammingArray[10] = dataBits[6];
        hammingArray[11] = dataBits[7];
        hammingArray[12] = dataBits[8];
        hammingArray[13] = dataBits[9];
        hammingArray[14] = dataBits[10];
        hammingArray[16] = dataBits[11];
        hammingArray[17] = dataBits[12];
        hammingArray[18] = dataBits[13];
        hammingArray[19] = dataBits[14];
        hammingArray[20] = dataBits[15];


        StringBuilder hammingCodeBuilder = new StringBuilder();
        for (int bit : hammingArray) {
            hammingCodeBuilder.append(bit);
        }

        return hammingCodeBuilder.toString();
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel byte0;
    private javax.swing.JLabel byte1;
    private javax.swing.JLabel byte10;
    private javax.swing.JLabel byte11;
    private javax.swing.JLabel byte12;
    private javax.swing.JLabel byte13;
    private javax.swing.JLabel byte14;
    private javax.swing.JLabel byte15;
    private javax.swing.JLabel byte16;
    private javax.swing.JLabel byte17;
    private javax.swing.JLabel byte18;
    private javax.swing.JLabel byte19;
    private javax.swing.JLabel byte2;
    private javax.swing.JLabel byte20;
    private javax.swing.JLabel byte21;
    private javax.swing.JLabel byte22;
    private javax.swing.JLabel byte23;
    private javax.swing.JLabel byte24;
    private javax.swing.JLabel byte25;
    private javax.swing.JLabel byte26;
    private javax.swing.JLabel byte27;
    private javax.swing.JLabel byte28;
    private javax.swing.JLabel byte29;
    private javax.swing.JLabel byte3;
    private javax.swing.JLabel byte30;
    private javax.swing.JLabel byte31;
    private javax.swing.JLabel byte32;
    private javax.swing.JLabel byte33;
    private javax.swing.JLabel byte34;
    private javax.swing.JLabel byte35;
    private javax.swing.JLabel byte36;
    private javax.swing.JLabel byte37;
    private javax.swing.JLabel byte38;
    private javax.swing.JLabel byte39;
    private javax.swing.JLabel byte4;
    private javax.swing.JLabel byte40;
    private javax.swing.JLabel byte41;
    private javax.swing.JLabel byte42;
    private javax.swing.JLabel byte43;
    private javax.swing.JLabel byte5;
    private javax.swing.JLabel byte6;
    private javax.swing.JLabel byte7;
    private javax.swing.JLabel byte8;
    private javax.swing.JLabel byte9;
    private javax.swing.JTextField dataAddressRead;
    private javax.swing.JTextField dataAddressWrite;
    private javax.swing.JTextField dataFieldRead;
    private javax.swing.JTextField dataFieldWrite;
    private javax.swing.JButton dataReadButton;
    private javax.swing.JLabel dataSizeLabel;
    private javax.swing.JLabel dataSizeLabel1;
    private javax.swing.JLabel dataSizeLabel2;
    private javax.swing.JLabel dataSizeLabel3;
    private javax.swing.JLabel dataSizeLabel4;
    private javax.swing.JLabel dataSizeLabel5;
    private javax.swing.JComboBox<String> dataSizeReadCombo;
    private javax.swing.JComboBox<String> dataSizeWriteCombo;
    private javax.swing.JTable dataTable;
    private javax.swing.JButton dataWriteBUtton;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel infoLabel1;
    private javax.swing.JLabel infoLabel2;
    private javax.swing.JLabel infoLabel3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel readDataLabel;
    // End of variables declaration                   
}
